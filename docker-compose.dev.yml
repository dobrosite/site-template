version: '3'

services:

    ##
    ## Веб-сервер.
    ##
    web:
        build:
            context: develop/docker/web
            args:
                # Значения этих переменных будут взяты из окружения.
                DOCKER_APACHE_MODULES:
                DOCKER_PHP_EXTENSIONS:
                DOCKER_PHP_VERSION:
                FILE_OWNER_UID:
        ports:
          - ${DOCKER_SITE_PORT}:80
        volumes:
            # Делаем папку htdocs корневой папкой сайта.
            - ./htdocs/:/var/www/html
            # Настройки Apache.
            - ./develop/docker/apache/sites-available:/etc/apache2/sites-available
            # В файле develop/docker/apache/php.ini можете указать свои настройки PHP.
            - ./develop/docker/apache/php.ini:/usr/local/etc/php/php.ini
    ##
    ## СУБД.
    ##
    db:
        build:
            context: ./develop/docker/db
            args:
                # Значения этих переменных будут взяты из окружения.
                DOCKER_MYSQL_VERSION:
                FILE_OWNER_UID:
        volumes:
            # Файлы БД будут созданы в папке develop/docker/db/var
            - ./develop/docker/db/var:/var/lib/mysql
            # Делаем папку с дампами БД доступной внутри контейнера.
            - ./db:/var/dumps
        environment:
            MYSQL_ROOT_PASSWORD: root
            # Настройка имени БД сайта и доступа к ней.
            MYSQL_DATABASE: database
            MYSQL_USER: user
            MYSQL_PASSWORD: password

    ##
    ## phpMyAdmin.
    ##
    phpmyadmin:
        depends_on:
          - db
        image: phpmyadmin/phpmyadmin:latest
        ports:
          - ${DOCKER_PMA_PORT}:80
        environment:
            - PMA_HOST=db
            - PMA_USER=user
            - PMA_PASSWORD=password
        volumes:
            - /sessions

    ##
    ## Перехватывающий почтовый сервер.
    ##
    mail:
        image: mailhog/mailhog:latest
        ports:
          - ${DOCKER_WEBMAIL_PORT}:8025
